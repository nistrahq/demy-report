@startuml Demy: Domain Model Diagram (Grouped by Bounded Context)

title Demy: Attendance Domain Layer Class Diagram
skinparam class {
    BackgroundColor<<Aggregate Root>> #FFFFFF/B3E5FC
    BackgroundColor<<Entity>> #FFFFFF/C8E6C9
    BackgroundColor<<Value Object>> #FFFFFF/FFF9C4
    BackgroundColor<<Domain Service>> #FFFFFF/FFCCBC
    BorderColor #212121
    ArrowColor #212121
    FontSize 14
}

package "Attendance Context" {
  package "Domain Layer " {
  class ClassAttendance <<(A, #27D3F5) Aggregate Root>> {
          - Long id
          - ClassSessionId classSessionId
          - LocalDate date
          - List<AttendanceRecord> attendances
          - AcademyId academyId
          # ClassAttendance()
          +ClassAttendance(CreateClassAttendanceCommand command)
               }

      class AttendanceRecord << (E) Entity>> {
      - Long id
      -StudentId studentId
      - AttendanceStatus status
      + changeStatus(AttendanceStatus newStatus)
              }

      class AttendanceStatus <<(V,#FFD700) Value Object >> {
      - PRESENT
      - ABSENT
      - EXCUSED


             }

      class ClassSessionId << (V, #FFD700) Value Object >> {
      - Long id
            }

      class ClassAttendanceCommandService << (S,Orange) Domain Service >> {
      +handle (CreateClassAttendanceCommand command) : Optional<ClassAttendance>

           }

      class ClassAttendanceQueryService << (S, Orange) Domain Service >> {
      + handle(GetAttendanceRecordsByStudentIdCourseAndDateRangeQuery query) : Optional<AttendanceRecord>
          }
       }
        ' Relationships
        ClassAttendance *-- "0..*" AttendanceRecord : contains >
        ClassAttendance "1"*-- "1" ClassSessionId : has >
        AttendanceRecord "1" *-- "1" AttendanceStatus : has >

        ClassAttendanceQueryService ..> ClassAttendance :  queries >
        ClassAttendanceCommandService ..> ClassAttendance : manages >


    }
    package "Shared Kernel" {
      package "Domain Layer " {

      class AcademyId << (V, #FFD700) Value Object>> {
      - academyId : Long
      # AcademyId()
      + AcademyId(academyId : Long)
      + getAcademyId() : Long

         }
      class StudentId << (V, #FFD700) Value Object>> {
            - studentId : Long
            # StudentId()
            + StudentId(studentId : Long)
            + getStudentId() : Long

               }
                ' Weak (ID-based) references
                ClassAttendance "1"..> "1" AcademyId : has >
                AttendanceRecord "1"..>  "1 "StudentId  : has >

      }
    }
@enduml